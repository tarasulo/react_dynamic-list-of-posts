{"version":3,"sources":["components/User.js","components/Comment.js","components/Commentlist.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","address","city","street","suite","zipcode","Comment","comment","Fragment","body","CommentList","comments","map","currentComment","components_Comment","Post","post","title","components_User","Commentlist","PostList","props","posts","currentPost","components_Post","url","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","link","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getFullData","_ref2","_callee2","postsFromServer","usersFromServer","commentsFromServer","_context2","concat","objectSpread","find","userId","id","filter","postId","fullPostsFromServer","App","state","visiblePosts","tempPhrase","handleClick","_this","setState","isLoading","setTimeout","isLoaded","filterPhrase","event","target","value","toLowerCase","filteredPosts","includes","type","placeholder","onInput","components_PostList","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e5e2e46.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"user\">\n    <div>\n      author:\n      {user.name}\n    </div>\n    <div>\n      write me:\n      {user.email}\n    </div>\n    <div>\n      best regards from:\n      {user.address.city}\n      ,  street:\n      {user.address.street}\n      ,  flat:\n      {user.address.suite}\n      ,  zipcode:\n      {user.address.zipcode}\n    </div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      city: PropTypes.string,\n      street: PropTypes.string,\n      suite: PropTypes.string,\n      zipcode: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <>\n    <div className=\"comment-body\">{comment.body}</div>\n    <div className=\"comment-author\">\n      name:\n      {comment.name}\n    </div>\n    <div className=\"comment-author\">\n      mail:\n      {comment.email}\n    </div>\n    <h7> - - - - - - - -</h7>\n  </>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <>\n    <h5> comments:</h5>\n    {comments.map(currentComment => (\n      <Comment comment={currentComment} />\n    ))}\n  </>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './Commentlist';\n\nconst Post = ({ post }) => (\n  <section className=\"post\">\n    <h2>\n      {post.title}\n    </h2>\n    <p>\n      {post.body}\n    </p>\n    <User user={post.user} />\n    <CommentList comments={post.comments} />\n  </section>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = props => (\n  <div>\n    {props.posts.map(currentPost => (\n      <Post post={currentPost} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nconst url = 'https://jsonplaceholder.typicode.com/';\n\nconst getData = async (link) => {\n  const responce = await fetch(link);\n  return await responce.json();\n};\n\nconst getFullData = async () => {\n  const postsFromServer = await getData(`${url + 'posts'}`);\n  const usersFromServer = await getData(`${url + 'users'}`);\n  const commentsFromServer = await getData(`${url + 'comments'}`);\n  \n  return postsFromServer.map(post => ({\n    ...post,\n    user: usersFromServer.find(user => post.userId === user.id),\n    comments: commentsFromServer.filter(comment => comment.postId === post.id),\n  }));\n};\n\nlet fullPostsFromServer = [];\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    visiblePosts: [],\n    tempPhrase: '',\n  }\n\n  async componentDidMount() {\n    fullPostsFromServer = await getFullData();\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        posts: fullPostsFromServer,\n        visiblePosts: fullPostsFromServer,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 1000);\n  };\n\n  filterPhrase = (event) => {\n    const tempPhrase = event.target.value.toLowerCase();\n\n    const filteredPosts = this.state.posts.filter(post => (\n      post.title.toLowerCase().includes(tempPhrase)\n      || post.body.toLowerCase().includes(tempPhrase)\n    ));\n\n    this.setState({\n      visiblePosts: filteredPosts,\n      tempPhrase,\n    });\n  }\n\n  render() {\n    const { visiblePosts } = this.state;\n\n    return (\n      <main>\n        { this.state.isLoaded ? (\n          <div className=\"App\">\n            <input\n              type=\"text\"\n              placeholder=\"filter by name, mother and father\"\n              onInput={this.filterPhrase}\n            />\n            <h1>Dynamic list of posts</h1>\n            <PostList posts={visiblePosts} />\n          </div>\n        ) : (\n          <button type=\"button\" className=\"load\" onClick={this.handleClick}>\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}